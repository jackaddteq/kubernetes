$ kubectl get pv

NAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                             STORAGECLASS       REASON   AGE
pvc-1629268b-e5a8-4775-b81f-80c990f4e2ce   8Gi        RWO            Delete           Bound    default/data-crowd-postgresql-0   do-block-storage            41m
pvc-18e3d3cf-eca6-4d87-8f48-c0588458bdc2   10Gi       RWO            Delete           Bound    default/crowd-vol-crowd-0         do-block-storage            41m

$ kubectl get pvc
NAME                      STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS       AGE
crowd-vol-crowd-0         Bound    pvc-18e3d3cf-eca6-4d87-8f48-c0588458bdc2   10Gi       RWO            do-block-storage   41m
data-crowd-postgresql-0   Bound    pvc-1629268b-e5a8-4775-b81f-80c990f4e2ce   8Gi        RWO            do-block-storage   41m

$ kubectl delete pvc crowd-vol-crowd-0 data-crowd-postgresql-0
persistentvolumeclaim "crowd-vol-crowd-0" deleted
persistentvolumeclaim "data-crowd-postgresql-0" deleted

helm install crowd crowd-helm-chart --set ingress.tlssecret=mysecret --debug --dry-run  > crowd.txt
helm delete crowd


# create tls secret
kubectl create secret tls mysecret --key abc.key --cert abc.crt

# ingress using the tls secret
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jira
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - abc.xyz.com
    secretName: mysecret
  rules:
  - host: abc.xyz.com
    http:
      paths:
      - backend:
          serviceName: myapp
          servicePort: 80
        path: /myapp




